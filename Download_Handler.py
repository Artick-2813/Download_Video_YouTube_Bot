from pytube import YouTube
from moviepy.editor import AudioFileClip

import os


class DownloadVideoFromYouTube:

    def __init__(self, url):
        self.url = url

    def get_title_video(self):
        info = {}
        try:
            url = self.url
            yt = YouTube(url)

            title = yt.title

            info['title'] = title

            return f'üìΩ –í–∏–¥–µ–æ: {info["title"]}'

        except Exception as e:
            print('ERROR:', str(e))
            return '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥ url –∞–¥—Ä–µ—Å–∞ ‚ùó'

    def get_url_video(self):
        try:
            url_video = self.url
            return url_video
        except Exception as e:
            print('ERROR:', str(e))
            return '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å URL –∞–¥—Ä–µ—Å ‚ùó'

    def download_video_720p(self, quality):
        try:
            url = self.url
            yt = YouTube(url)

            PATH = r'C:\Users\Admin\Desktop\Download_video'

            if quality == '720p':
                stream = yt.streams.get_by_itag(22)
                stream.download(output_path=PATH)
                return '–í–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ'

            else:
                return '–¢–∞–∫–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–µ—Ç ‚ùó'
        except Exception as ex:

            if str(ex) == 'regex_search: could not find match for (?:v=|\/)([0-9A-Za-z_-]{11}).*':
                print('ERROR: ', ex)
                return '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥ –∞–¥—Ä–µ—Å–∞ –≤–∏–¥–µ–æ'

            if str(ex) == "'NoneType' object has no attribute 'download'":
                print('ERROR: ', ex)
                return '–¢–∞–∫–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–µ—Ç ‚ùó'
            else:
                print(str(ex))
                return '–£–ø—Å, –≤–æ–∑–Ω–∏–∫–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞ :('

    def download_video_360p(self, quality):
        try:
            url = self.url
            yt = YouTube(url)

            PATH = r'C:\Users\Admin\Desktop\Download_video'

            if quality == '360p':
                stream = yt.streams.get_by_itag(18)
                stream.download(output_path=PATH)
                return '–í–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ'
            else:
                return '–¢–∞–∫–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–µ—Ç ‚ùó'
        except Exception as ex:

            if str(ex) == 'regex_search: could not find match for (?:v=|\/)([0-9A-Za-z_-]{11}).*':
                print('ERROR: ', ex)
                return '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥ –∞–¥—Ä–µ—Å–∞ –≤–∏–¥–µ–æ'

            if str(ex) == "'NoneType' object has no attribute 'download'":
                print('ERROR: ', ex)
                return '–¢–∞–∫–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–µ—Ç ‚ùó'
            else:
                print(str(ex))
                return '–£–ø—Å, –≤–æ–∑–Ω–∏–∫–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞ :('

    def download_video_144p(self, quality):
        try:
            url = self.url
            yt = YouTube(url)

            PATH = r'C:\Users\Admin\Desktop\Download_video'

            if quality == '144p':
                stream = yt.streams.get_by_itag(17)
                stream.download(output_path=PATH)
                return '–í–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ'
            else:
                return '–¢–∞–∫–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–µ—Ç ‚ùó'
        except Exception as ex:

            if str(ex) == 'regex_search: could not find match for (?:v=|\/)([0-9A-Za-z_-]{11}).*':
                print('ERROR: ', ex)
                return '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥ –∞–¥—Ä–µ—Å–∞ –≤–∏–¥–µ–æ'

            if str(ex) == "'NoneType' object has no attribute 'download'":
                print('ERROR: ', ex)
                return '–¢–∞–∫–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–µ—Ç ‚ùó'
            else:
                print(str(ex))
                return '–£–ø—Å, –≤–æ–∑–Ω–∏–∫–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞ :('


class DownloadAudioFromYouTube:

    def __init__(self, name_file):
        self.name_file = name_file

    def download_audio(self):
        try:
            PATH = r'C:\Users\Admin\Desktop\Download_video'

            file = self.name_file

            new_file = file.split('.')[0]

            full_path = os.path.join(PATH, file)
            print(full_path)

            audio = AudioFileClip(full_path)

            end_path = os.path.join(PATH, new_file + '.mp3')

            audio.write_audiofile(end_path)

            return '–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª'
        except Exception as ex:
            print(ex)
            return '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∞—É–¥–∏–æ—Ñ–∞–π–ª'

